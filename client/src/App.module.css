.appContainer {
  display: flex;
  flex-direction: column;
  height: 100vh; /* 画面の高さに合わせる */
  overflow: hidden; /* 画面全体でのスクロールを防止 */
  font-size: 0.9rem; /* 全体のフォントサイズを少し小さく */
  text-align: center;
  background-color: #1a1a2e; /* global.css と同じ色 */
  color: #e0e0e0; /* global.css と同じ色 */
  padding: 0.5vh 0; /* 上下のパディングをビューポートの高さに合わせる */
}

.messageHeader {
  margin: 0.2vh 0;
  font-size: 1.2rem;
  color: #8be9fd; /* 明るい水色 */
  text-shadow: 1px 1px 2px rgba(0,0,0,0.8); /* 影を追加 */
}

.turnHeader {
  margin: 0.1vh 0;
  font-size: 1rem;
  color: #f1fa8c; /* 明るい黄色 */
  text-shadow: 1px 1px 2px rgba(0,0,0,0.8); /* 影を追加 */
}

.gameArea {
  display: flex;
  flex-direction: column; /* 子要素を縦に並べる */
  justify-content: space-between; /* 上下のエリア間にスペースを確保 */
  align-items: stretch; /* 子要素が親の幅いっぱいに広がるように */
  flex-grow: 1; /* 残りのスペースを埋める */
  width: 98vw; /* 画面幅の98%を使用 */
  margin: 0 auto;
  border: 2px solid #44475a; /* ボーダー色を調整 */
  padding: 0.5vh; /* Connection Status */
}

.connectionStatus {
  position: fixed;
  top: 10px;
  right: 20px;
  padding: 8px 15px;
  border-radius: 20px;
  font-size: 0.9rem;
  font-weight: bold;
  display: flex;
  align-items: center;
  gap: 10px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  z-index: 1000;
  transition: all 0.3s ease;
}

.connectionStatus.connected {
  background-color: #50fa7b;
  color: #1e1e2e;
}

.connectionStatus.connecting {
  background-color: #f1fa8c;
  color: #1e1e2e;
}

.connectionStatus.error {
  background-color: #ff5555;
  color: white;
}

.reconnectButton {
  background-color: rgba(255, 255, 255, 0.2);
  border: 1px solid white;
  color: white;
  padding: 4px 12px;
  border-radius: 15px;
  cursor: pointer;
  font-size: 0.8rem;
  transition: all 0.2s ease;
}

.reconnectButton:hover {
  background-color: rgba(255, 255, 255, 0.3);
  transform: translateY(-1px);
}

.reconnectButton:active {
  transform: translateY(0);
}

.connectionStatus:before {
  content: '●';
  display: inline-block;
  margin-right: 5px;
  color: #f1fa8c;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.5; }
  100% { opacity: 1; }
}

.menuContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background: linear-gradient(135deg, #1e1e2e 0%, #282a36 100%);
  color: #f8f8f2;
  text-align: center;
  padding: 20px;
}

.menuTitle {
  font-size: 3rem;
  margin-bottom: 2rem;
  color: #bd93f9;
  text-shadow: 0 0 10px rgba(189, 147, 249, 0.5);
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0px); }
}

.menuButtons {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  width: 100%;
  max-width: 300px;
}

.menuButton {
  padding: 1rem 2rem;
  font-size: 1.2rem;
  background: linear-gradient(135deg, #bd93f9 0%, #ff79c6 100%);
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.menuButton:hover {
  transform: translateY(-3px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
}

.menuButton:active {
  transform: translateY(1px);
}

.menuButton:disabled {
  background: #44475a;
  color: #6272a4;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.menuMessage {
  margin-top: 2rem;
  color: #f1fa8c;
  font-size: 1rem;
  min-height: 24px;
}

.opponentArea,
.yourArea {
  border: 1px solid;
  padding: 0.5vh;
  display: flex;
  flex-direction: column;
  width: 100%; /* 幅を100%に */
  flex-grow: 1; /* 高さを柔軟に */
  border-radius: 8px;
  box-sizing: border-box;
  color: #f8f8f2; /* エリア内の文字色 */
  box-shadow: inset 0 0 8px rgba(0,0,0,0.3); /* 内側に影を追加 */
}

.opponentArea {
  border-color: #ff5555; /* 赤系 */
  background-color: #3a3c4a; /* 濃いグレー */
}

.yourArea {
  border-color: #50fa7b; /* 緑系 */
  background-color: #3a3c4a; /* 濃いグレー */
}

/* 自分のエリア内のレイアウト調整 */
.yourArea h3, .yourArea p, .yourArea h4 {
  margin-bottom: 0.2vh; /* 各見出しと段落の下マージンを調整 */
}

.manaHandContainer {
  display: flex;
  flex-direction: row; /* マナゾーンと手札を横に並べる */
  flex-grow: 1; /* 残りのスペースを埋める */
  justify-content: flex-start; /* 左寄せ */
  align-items: flex-start;
  margin-top: 0.5vh;
}

.manaZoneContainer {
  display: flex;
  flex-direction: column;
  width: 20%; /* マナゾーンの幅 */
  min-width: 80px; /* 最小幅 */
  align-items: center;
  margin-right: 0.5rem; /* 手札との間にスペース */
}

.handContainer {
  flex-grow: 1; /* 手札が残りのスペースを埋める */
  width: 75%; /* 手札の幅 */
}

.deckEndTurnContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 0.5vh;
  gap: 1rem; /* 要素間のスペース */
}

.manaZone,
.playedCardsArea {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding: 0.2vh;
  margin-bottom: 0.5vh;
  border-radius: 5px;
  box-sizing: border-box;
  background-color: #44475a; /* ゾーンの背景色 */
  flex-shrink: 1; /* 縮小を許可 */
}

.manaZone {
  min-height: 7.5vh; /* カードの高さに合わせて調整 */
  max-height: 10vh; /* マナゾーンの最大高さを設定 */
  overflow-y: auto; /* 必要に応じてスクロール */
  border: 1px dashed #bd93f9; /* 紫系 */
  align-content: flex-start; /* カードが複数行にわたる場合に上から詰める */
  display: flex; /* flexbox を有効にする */
  justify-content: center; /* 中央寄せ */
  align-items: center; /* 中央寄せ */
  flex-grow: 1; /* 残りのスペースを埋める */
}

.playedCardsArea {
  border: 1px dashed #ff79c6; /* ピンク系 */
  flex-grow: 1; /* 残りのスペースを埋める */
  overflow-y: auto; /* 必要に応じてスクロール */
}

.manaZoneOver,
.playedCardsAreaOver {
  border-color: #8be9fd !important; /* 明るい水色 */
  background-color: #55586b !important; /* ゾーンの背景色より少し明るく */
}

.emptyZoneText {
  font-size: 0.9rem; /* 少し大きく */
  color: #f8f8f2;
  opacity: 0.6; /* 少し薄く */
}

.endTurnButton {
  padding: 0.5vh 1rem;
  margin-top: 0.5vh;
  background-color: #bd93f9; /* 紫系 */
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 0.9rem;
  align-self: center; /* 中央揃え */
  transition: background-color 0.3s ease; /* ホバーエフェクト */
  box-shadow: 2px 2px 5px rgba(0,0,0,0.5); /* ボタンに影を追加 */
}

.endTurnButton:hover {
  background-color: #fd62ba; /* ホバーでピンク系 */
}

/* 相手のマナゾーンの調整 */
.opponentFieldManaContainer {
  display: flex;
  flex-direction: row; /* フィールドとマナゾーンを横に並べる */
  flex-grow: 1; /* 残りのスペースを埋める */
  justify-content: space-between; /* スペースを均等に配分 */
  align-items: flex-start;
}

.opponentManaZoneContainer {
  display: flex;
  flex-direction: column;
  width: 20%; /* マナゾーンの幅 */
  min-width: 80px; /* 最小幅 */
  align-items: center;
  margin-right: 0.5rem; /* 手札との間にスペース */
}

/* 相手のPlayedCardsAreaの幅を調整 */
.opponentArea .playedCardsArea {
  /* width: 75%; */ /* フィールドの幅 */
  flex-grow: 1; /* 残りのスペースを埋める */
}

.graveyardContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding: 0.2vh;
  margin-bottom: 0.5vh;
  border-radius: 5px;
  box-sizing: border-box;
  background-color: #44475a; /* ゾーンの背景色 */
  flex-shrink: 1;
  min-height: 7.5vh; /* カードの高さに合わせて調整 */
  max-height: 10vh; /* マナゾーンの最大高さを設定 */
  border: 1px dashed #ffb86c; /* オレンジ系 */
  align-content: flex-start;
  flex-grow: 1; /* 残りのスペースを埋める */
}